syntax = "proto3";

package movie.movie;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "movie/movie/params.proto";
import "movie/movie/movie.proto";
import "movie/movie/review.proto";
import "movie/movie/tittle_allocation.proto";
import "movie/movie/reviews_allocation.proto";

option go_package = "movie/x/movie/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/movie/movie/params";
  
  }
  
  // Queries a list of Movie items.
  rpc Movie    (QueryGetMovieRequest) returns (QueryGetMovieResponse) {
    option (google.api.http).get = "/movie/movie/movie/{id}";
  
  }
  rpc MovieAll (QueryAllMovieRequest) returns (QueryAllMovieResponse) {
    option (google.api.http).get = "/movie/movie/movie";
  
  }
  
  // Queries a list of Review items.
  rpc Review    (QueryGetReviewRequest) returns (QueryGetReviewResponse) {
    option (google.api.http).get = "/movie/movie/review/{id}";
  
  }
  rpc ReviewAll (QueryAllReviewRequest) returns (QueryAllReviewResponse) {
    option (google.api.http).get = "/movie/movie/review";
  
  }
  
  // Queries a list of TittleAllocation items.
  rpc TittleAllocation    (QueryGetTittleAllocationRequest) returns (QueryGetTittleAllocationResponse) {
    option (google.api.http).get = "/movie/movie/tittle_allocation/{movieTitle}";
  
  }
  rpc TittleAllocationAll (QueryAllTittleAllocationRequest) returns (QueryAllTittleAllocationResponse) {
    option (google.api.http).get = "/movie/movie/tittle_allocation";
  
  }
  
  // Queries a list of ReviewsAllocation items.
  rpc ReviewsAllocation    (QueryGetReviewsAllocationRequest) returns (QueryGetReviewsAllocationResponse) {
    option (google.api.http).get = "/movie/movie/reviews_allocation/{movieId}";
  
  }
  rpc ReviewsAllocationAll (QueryAllReviewsAllocationRequest) returns (QueryAllReviewsAllocationResponse) {
    option (google.api.http).get = "/movie/movie/reviews_allocation";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetMovieRequest {
  uint64 id = 1;
}

message QueryGetMovieResponse {
  Movie Movie = 1 [(gogoproto.nullable) = false];
}

message QueryAllMovieRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMovieResponse {
  repeated Movie                                  Movie      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetReviewRequest {
  uint64 id = 1;
}

message QueryGetReviewResponse {
  Review Review = 1 [(gogoproto.nullable) = false];
}

message QueryAllReviewRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllReviewResponse {
  repeated Review                                 Review     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetTittleAllocationRequest {
  string movieTitle = 1;
}

message QueryGetTittleAllocationResponse {
  TittleAllocation tittleAllocation = 1 [(gogoproto.nullable) = false];
}

message QueryAllTittleAllocationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTittleAllocationResponse {
  repeated TittleAllocation                       tittleAllocation = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination       = 2;
}

message QueryGetReviewsAllocationRequest {
  uint64 movieId = 1;
}

message QueryGetReviewsAllocationResponse {
  ReviewsAllocation reviewsAllocation = 1 [(gogoproto.nullable) = false];
}

message QueryAllReviewsAllocationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllReviewsAllocationResponse {
  repeated ReviewsAllocation                      reviewsAllocation = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination        = 2;
}

